<?php
/**
 * N Framework
 *
 * WARNING: This file is part of the core N Framework. DO NOT edit this file under any circumstances.
 * Please do all modifications in the form of a child theme.
 *
 * @since 0.0.1
 * @package    N
 * @subpackage N/includes/classes
 */

if (!defined('ABSPATH')):
	exit; // Exit if accessed directly.
endif;

/**
 * N breadcrumbs class
 *
 * @since      0.0.1
 */
class NBreadcrumbs {

	/**
	 * Breadcrumb trail.
	 *
	 * @since      0.0.1
	 */
	private $crumbs = [];

	/**
	 * String.
	 *
	 * @var array
	 */
	private $strings = [];

	/**
	 * The Constructor
	 *
	 * @codeCoverageIgnore
	 */
	public function __construct(){
		$this->strings = wp_parse_args([
			'home'           => esc_html__('Trang chủ', '_n'),
			'home_link'      => get_home_url(),
			'error404'       => 'Lỗi 404: không tìm thấy trang',
			'search_format'  => 'Kết quả tìm kiếm cho từ khoá <span class="keyword">%s</span>',
			'archive_format' => 'Lưu trữ cho %s',
		]);
	}


	/**
	 * Get an instance of the class.
	 *
	 * @since      0.0.1
	 */
	public static function get(){
		return new NBreadcrumbs();
	}

	/**
	 * Get the breadcrumbs.
	 *
	 * @since      0.0.1
	 */
	public function get_breadcrumb($args = []){
		$args = wp_parse_args($args, [
			'delimiter'   => '&nbsp;&#47;&nbsp;',
			'wrap_before' => '<nav aria-label="breadcrumbs" class="n-breadcrumb">',
			'wrap_after'  => '</nav>',
			'before'      => '',
			'after'       => '',
		]);

		$html   = '';
		$crumbs = $this->get_crumbs();
		$size   = count($crumbs);

		foreach ($crumbs as $key => $crumb):
			$link = !empty($crumb[1]) && ($size !== $key + 1);
			$link = $link ? '<a href="' . esc_url($crumb[1]) . '">' . esc_html($crumb[0]) . '</a>' : '<span class="last">' . esc_html($crumb[0]) . '</span>';
			$html .= $args['before'] . $link . $args['after'];
			if ($size !== $key + 1):
				$html .= '<span class="separator">></span>';
			endif;
		endforeach;

		return $args['wrap_before'] . $html . $args['wrap_after'];
	}

	/**
	 * Get the breadrumb trail.
	 *
	 * @since      0.0.1
	 */
	public function get_crumbs(){
		if (empty($this->crumbs)):
			$this->generate();
		endif;

		return $this->crumbs;
	}

	/**
	 * Add an item to the breadcrumbs.
	 *
	 * @since      0.0.1
	 */
	private function add_crumb($name, $link = '', $hide_in_schema = false){
		$this->crumbs[] = [
			wp_strip_all_tags($name),
			$link,
			'hide_in_schema' => $hide_in_schema,
		];
	}

	/**
	 * Generate the breadcrumb trail.
	 *
	 * @since      0.0.1
	 */
	private function generate(){
		$conditionals = [
			'is_home',
			'is_404',
			'is_search',
			'is_attachment',
			'is_shop',
			'is_product',
			'is_singular',
			'is_product_category',
			'is_product_tag',
			'is_post_type_archive',
			'is_category',
			'is_tag',
			'is_tax',
			'is_date',
			'is_author',
		];

		$this->add_home_crumb();

		foreach ($conditionals as $conditional):
			if (function_exists($conditional) && call_user_func($conditional)):
				call_user_func([$this, 'add_crumbs_' . substr($conditional, 3)]);
				break;
			endif;
		endforeach;

		$this->add_page_crumb();
	}

	/**
	 * Add a page crumb to paginated trails.
	 *
	 * @since 1.0.8
	 */
	private function add_page_crumb(){
		if (!is_paged()):
			return;
		endif;

		$current_page = get_query_var('paged', 1);

		if ($current_page <= 1):
			return;
		endif;

		$this->add_crumb(sprintf(esc_html__('Trang %s', '_n'), $current_page), '', true);
	}

	/**
	 * Add home label.
	 */
	private function add_home_crumb(){
		$this->add_crumb($this->strings['home'], $this->strings['home_link']);
	}

	/**
	 * Is home trail.
	 *
	 * @since      0.0.1
	 */
	private function add_crumbs_home(){
		$this->add_crumb(single_post_title('', false));
	}

	/**
	 * 404 trail.
	 *
	 * @since      0.0.1
	 */
	private function add_crumbs_404(){
		$this->add_crumb($this->strings['error404']);
	}

	/**
	 * Search results trail.
	 *
	 * @since      0.0.1
	 */
	private function add_crumbs_search(){
		$this->add_crumb(sprintf($this->strings['search_format'], get_search_query()), '');
	}

	/**
	 * Attachment trail.
	 *
	 * @since      0.0.1
	 */
	private function add_crumbs_attachment(){
		global $post;

		$this->add_crumbs_singular($post->post_parent, get_permalink($post->post_parent));
		$this->add_crumb($this->get_breadcrumb_title('post', get_the_ID(), get_the_title()), get_permalink());
	}

	/**
	 * Single product trail.
	 *
	 * @since      0.0.1
	 */
	private function add_crumbs_product(){
		global $post;

		$this->add_primary_term(get_the_terms($post->ID, 'product_cat'));

		if (isset($post->ID)):
			$this->add_crumb($this->get_breadcrumb_title('post', $post->ID, get_the_title($post)), get_permalink($post));
		endif;
	}

	/**
	 * Single post trail.
	 *
	 * @since      0.0.1
	 */
	private function add_crumbs_singular($post_id = 0, $permalink = ''){
		$post      = !$post_id ? $GLOBALS['post'] : get_post($post_id);
		$post_type = get_post_type($post);
		$permalink = $permalink ? $permalink : get_permalink($post);

		$this->add_crumbs_post_type_archive($post_type);

		if (!isset($post->ID) || empty($post->ID)):
			return;
		endif;

		$this->add_primary_term(get_the_terms($post, 'category'));

		$this->add_crumb($this->get_breadcrumb_title('post', $post->ID, get_the_title($post)), $permalink);
	}

	/**
	 * Product category trail.
	 *
	 * @since      0.0.1
	 */
	private function add_crumbs_product_category(){
		$term = $GLOBALS['wp_query']->get_queried_object();
		$this->add_term_ancestors($term);
		$this->add_crumb($this->get_breadcrumb_title('term', $term, $term->name), get_term_link($term));
	}

	/**
	 * Product tag trail.
	 *
	 * @since      0.0.1
	 */
	private function add_crumbs_product_tag(){
		$term = $GLOBALS['wp_query']->get_queried_object();
		$this->add_crumb(sprintf(__('Sản phẩm được gắn thẻ &ldquo;%s&rdquo;', '_n'), $this->get_breadcrumb_title('term', $term, $term->name)), get_term_link($term));
	}

	/**
	 * Shop trail.
	 *
	 * @since      0.0.1
	 */
	private function add_crumbs_shop(){
		$shop_page_id = function_exists('wc_get_page_id') ? wc_get_page_id('shop') : false;

		if (intval(get_option('page_on_front')) === $shop_page_id):
			return;
		endif;

		$name = $shop_page_id ? $this->get_breadcrumb_title('post', $shop_page_id, get_the_title($shop_page_id)) : '';

		if (!$name):
			$post_type = get_post_type_object('product');
			$name      = $post_type->labels->singular_name;
		endif;

		$this->add_crumb($name, get_post_type_archive_link('product'));
	}

	/**
	 * Post type archive trail.
	 *
	 * @since      0.0.1
	 */
	private function add_crumbs_post_type_archive($post_type = null){
		if (!$post_type):
			$post_type = $GLOBALS['wp_query']->get('post_type');
		endif;

		if ('post' === $post_type):
			return;
		endif;

		$type_object = get_post_type_object($post_type);

		if (!empty($type_object->has_archive)):
			$this->add_crumb($type_object->labels->name, get_post_type_archive_link($post_type));
		endif;
	}

	/**
	 * Category trail.
	 *
	 * @since      0.0.1
	 */
	private function add_crumbs_category(){
		$term = $GLOBALS['wp_query']->get_queried_object();
		$this->add_term_ancestors($term);
		$this->add_crumb($this->get_breadcrumb_title('term', $term, $term->name), get_term_link($term));
	}

	/**
	 * Tag trail.
	 *
	 * @since      0.0.1
	 */
	private function add_crumbs_tag(){
		$term = $GLOBALS['wp_query']->get_queried_object();
		$this->add_crumb($this->get_breadcrumb_title('term', $term, $term->name), get_term_link($term));
	}

	/**
	 * Taxonomies trail.
	 *
	 * @since      0.0.1
	 */
	private function add_crumbs_tax(){
		$term = $GLOBALS['wp_query']->get_queried_object();
		$this->add_term_ancestors($term);
		$this->add_crumb($this->get_breadcrumb_title('term', $term, $term->name), get_term_link($term));
	}

	/**
	 * Trail for date based archives.
	 *
	 * @since      0.0.1
	 */
	private function add_crumbs_date(){
		if (is_year() || is_month() || is_day()):
			$this->add_crumb(sprintf($this->strings['archive_format'], get_the_time('Y')), get_year_link(get_the_time('Y')));
		endif;

		if (is_month() || is_day()):
			$this->add_crumb(sprintf($this->strings['archive_format'], get_the_time('F')), get_month_link(get_the_time('Y'), get_the_time('m')));
		endif;

		if (is_day()):
			$this->add_crumb(sprintf($this->strings['archive_format'], get_the_time('d')));
		endif;
	}

	/**
	 * Trail for author archives.
	 *
	 * @since      0.0.1
	 */
	private function add_crumbs_author(){
		global $author;

		$userdata = get_userdata($author);
		$this->add_crumb(sprintf($this->strings['archive_format'], $this->get_breadcrumb_title('user', $userdata->ID, $userdata->display_name)));
	}

	/**
	 * Get the primary term.
	 *
	 * @since      0.0.1
	 */
	private function add_primary_term($terms){
		if (is_wp_error($terms) || empty($terms)):
			return;
		endif;

		$term = $terms[0];
		$this->add_term_ancestors($term);
		$this->add_crumb($this->get_breadcrumb_title('term', $term, $term->name), get_term_link($term));
	}

	/**
	 * Add ancestor taxonomy crumbs to the hierachical taxonomy trails.
	 *
	 * @since      0.0.1
	 */
	private function add_term_ancestors($term){
		if (!$this->can_add_term_ancestors($term)):
			return;
		endif;

		$ancestors = get_ancestors($term->term_id, $term->taxonomy);
		$ancestors = array_reverse($ancestors);

		foreach ($ancestors as $ancestor):
			$ancestor = get_term($ancestor, $term->taxonomy);
			if (!is_wp_error($ancestor) && $ancestor):
				$this->add_crumb($this->get_breadcrumb_title('term', $ancestor, $ancestor->name), get_term_link($ancestor));
			endif;
		endforeach;
	}

	/**
	 * Can add ancestor taxonomy crumbs to the hierachical taxonomy trails.
	 *
	 * @since      0.0.1
	 */
	private function can_add_term_ancestors($term){
		if (0 === $term->parent || false === is_taxonomy_hierarchical($term->taxonomy)):
			return false;
		endif;

		return true;
	}

	/**
	 * Get the breadcrumb title.
	 *
	 * @since      0.0.1
	 */
	private function get_breadcrumb_title($object_type, $object_id, $default){
		$title = '';

		if ('post' === $object_type):
			$title = get_post_meta($object_id, 'breadcrumb_title');
		elseif ('term' === $object_type):
			$title = get_term_meta($object_id, 'breadcrumb_title');
		elseif ('user' === $object_type):
			$title = get_user_meta($object_id, 'breadcrumb_title');
		endif;

		return $title ? $title : $default;
	}
}
